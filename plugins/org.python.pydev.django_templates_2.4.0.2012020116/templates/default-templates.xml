<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Auto-escaping inside the block"
        enabled="true"
        name="autoescape"
        id="org.python.pydev.django_templates.templatesContext.tags.autoescape"
   >{% autoescape ${on_or_off} %}
    ${cursor}
{% endautoescape %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Define a block that can be overridden by child templates"
        enabled="true"
        name="block"
        id="org.python.pydev.django_templates.templatesContext.tags.block"
   >{% block ${name} %}
    ${cursor}
{% endblock %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Ignore everything between {% comment %} and {% endcomment %}"
        enabled="true"
        name="comment"
        id="org.python.pydev.django_templates.templatesContext.tags.comment"
   >{% comment %}
    ${cursor}
{% endcomment %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="easy-to-use protection against Cross Site Request Forgeries"
        enabled="true"
        name="csrf_token"
        id="org.python.pydev.django_templates.templatesContext.tags.csrf_token"
   >{% csrf_token %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Cycles among the given strings each time through the loop"
        enabled="true"
        name="cycle"
        id="org.python.pydev.django_templates.templatesContext.tags.cycle"
   >{% cycle ${row1} ${row2} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Output a whole load of debugging information, including the current context and imported modules"
        enabled="true"
        name="debug"
        id="org.python.pydev.django_templates.templatesContext.tags.debug"
   >{% debug %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Signal that this template extends a parent template"
        enabled="true"
        name="extends"
        id="org.python.pydev.django_templates.templatesContext.tags.extends"
   >{% extends "${base_html}" %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Filter the contents of the variable through variable filters"
        enabled="true"
        name="filter"
        id="org.python.pydev.django_templates.templatesContext.tags.filter"
   >{% filter ${filter_name} %}
    ${cursor}
{% endfilter %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Outputs the first variable passed that is not False, without escaping"
        enabled="true"
        name="firstof"
        id="org.python.pydev.django_templates.templatesContext.tags.firstof"
   >{% firstof ${var1} ${var2} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Loop over each item in an array"
        enabled="true"
        name="for"
        id="org.python.pydev.django_templates.templatesContext.tags.for"
   >{% for ${el} in ${array} %}
    ${cursor}
{% endfor %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="The for tag can take an optional {% empty %} clause that will be displayed if the given array is empty or could not be found"
        enabled="true"
        name="forempty"
        id="org.python.pydev.django_templates.templatesContext.tags.forempty"
   >{% for ${el} in ${array} %}
    ${cursor}
{% empty %}
{% endfor %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Evaluates a variable, and if that variable is true the contents of the block are output"
        enabled="true"
        name="if"
        id="org.python.pydev.django_templates.templatesContext.tags.if"
   >{% if ${condition} %}
    ${cursor}
{% endif %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="The if tag can take an optional {% else %} clause that will be displayed if the test fails"
        enabled="true"
        name="ifelse"
        id="org.python.pydev.django_templates.templatesContext.tags.ifelse"
   >{% if ${condition} %}
    ${cursor}
{% else %}
{% endif %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Check if a value has changed from the last iteration of a loop"
        enabled="true"
        name="ifchanged"
        id="org.python.pydev.django_templates.templatesContext.tags.ifchanged"
   >{% ifchanged ${what} %}
    ${cursor}
{% endifchanged %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Check if a value has changed from the last iteration of a loop"
        enabled="true"
        name="ifchangedelse"
        id="org.python.pydev.django_templates.templatesContext.tags.ifchangedelse"
   >{% ifchanged ${what} %}
    ${cursor}
{% else %}
{% endifchanged %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Output the contents of the block if the two arguments equal each other"
        enabled="true"
        name="ifequal"
        id="org.python.pydev.django_templates.templatesContext.tags.ifequal"
   >{% ifequal ${par1} ${par2} %}
    ${cursor}
{% endifequal %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Output the contents of the block if the two arguments are NOT equal"
        enabled="true"
        name="ifnotequal"
        id="org.python.pydev.django_templates.templatesContext.tags.ifnotequal"
   >{% ifnotequal ${par1} ${par2} %}
{% endifnotequal %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Loads a template and renders it with the current context"
        enabled="true"
        name="include"
        id="org.python.pydev.django_templates.templatesContext.tags.include"
   >{% include "${path_to_html}" %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Load a custom template tag set"
        enabled="true"
        name="load"
        id="org.python.pydev.django_templates.templatesContext.tags.load"
   >{% load ${templ} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Display the date, formatted according to the given string"
        enabled="true"
        name="now"
        id="org.python.pydev.django_templates.templatesContext.tags.now"
   >{% now "${c}" %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Regroup a list of alike objects by a common attribute"
        enabled="true"
        name="regroup"
        id="org.python.pydev.django_templates.templatesContext.tags.regroup"
   >{% regroup ${x} by ${y} as ${list} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Removes whitespace between HTML tags"
        enabled="true"
        name="spaceless"
        id="org.python.pydev.django_templates.templatesContext.tags.spaceless"
   >{% spaceless %}
    ${cursor}
{% endspaceless %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Output the contents of a given file into the page"
        enabled="true"
        name="ssi"
        id="org.python.pydev.django_templates.templatesContext.tags.ssi"
   >{% ssi ${filename} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Output one of the syntax characters used to compose template tags"
        enabled="true"
        name="templatetag"
        id="org.python.pydev.django_templates.templatesContext.tags.templatetag"
   >{% templatetag ${arg} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Returns an absolute URL (i.e., a URL without the domain name) matching a given view function and optional parameters"
        enabled="true"
        name="url"
        id="org.python.pydev.django_templates.templatesContext.tags.url"
   >{% url ${path_to_some_view} ${args} %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="For creating bar charts and such, this tag calculates the ratio of a given value to a maximum value, and then applies that ratio to a constant"
        enabled="true"
        name="widthratio"
        id="org.python.pydev.django_templates.templatesContext.tags.widthratio"
   >{% widthratio ${this_value} ${max_value} 100 %}</template>

   <template
        autoinsert="true"
        context="org.python.pydev.django_templates.templatesContext"
        deleted="false"
        description="Caches a complex variable under a simpler name"
        enabled="true"
        name="with"
        id="org.python.pydev.django_templates.templatesContext.tags.with"
   >{% with ${x} as ${y} %}
    ${cursor}
{% endwith %}</template>

</templates>